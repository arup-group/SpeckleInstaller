# General Configuration
version: 1.8.26.{build}
skip_branch_with_pr: true

# Environment Configuration
image: Visual Studio 2017
cache:
  - '%LocalAppData%\NuGet\v3-cache'

environment:
  my_variable:
    secure: mxiydinHKH3TmtBeDKldgt7VD90uiOW/GCbUD70x5HMB7B7lWinN3A2tw2dnt17x

 # version
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: '{version}'
  assembly_file_version: '{version}'


# Build Configuration
platform: Any CPU
configuration: Release

before_build:
  - nuget restore

build:
  project: SpeckleUpdater.sln
  #verbosity: minimal


# after_build:
#   - InnoSetup\ISCC.exe SpeckleInstaller.iss
after_build :
  - ps: |
      $apiUrl = 'https://ci.appveyor.com/api'
      $token = 'v2.bngo3nen438pm58fx2n1'
      $headers = @{
        "Authorization" = "Bearer $token"
      }
  # DOWNLOAD RHINO+GH ARTIFACTS
  - ps: |
      $prjUrl = "$apiUrl/projects/speckleworks/specklerhino/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $jobId = $project.build.jobs[0].jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      $start_time = Get-Date
      Invoke-WebRequest -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleRhino"
      Write-Output "Time taken downloading: $((Get-Date).Subtract($start_time).Seconds) second(s)"
      Write-Output "DESTINATION=$dest"
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa
      Write-Output "Time taken unzipping: $((Get-Date).Subtract($start_time).Seconds) second(s)"
  - ls C:\projects\speckleinstaller\SpeckleRhino
  # DOWNLOAD DYNAMO ARTIFACTS
  - ps: |
      $prjUrl = "$apiUrl/projects/speckleworks/speckledynamo/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $jobId = $project.build.jobs[0].jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleDynamo"
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa
  - ls C:\projects\speckleinstaller\SpeckleDynamo
   # DOWNLOAD REVIT 2019 ARTIFACTS
  - ps: |
      $version = "2019"
      $release = "Configuration: Release" + $version
      write-host $release
      $prjUrl = "$apiUrl/projects/speckleworks/specklerevitreboot/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $job = $project.build.jobs | Where name -eq $release
      $jobId = $job.jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleRevit" + $version
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa

     # DOWNLOAD REVIT 2020 ARTIFACTS
  - ps: |
      $version = "2020"
      $release = "Configuration: Release" + $version
      $prjUrl = "$apiUrl/projects/speckleworks/specklerevitreboot/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $job = $project.build.jobs | Where name -eq $release
      $jobId = $job.jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleRevit" + $version
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa

     # DOWNLOAD REVIT 2021 ARTIFACTS
  - ps: |
      $version = "2021"
      $release = "Configuration: Release" + $version
      $prjUrl = "$apiUrl/projects/speckleworks/specklerevitreboot/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $job = $project.build.jobs | Where name -eq $release
      $jobId = $job.jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleRevit" + $version
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa

  # DOWNLOAD specklecoregeometry ARTIFACTS
  - ps: |
      $prjUrl = "$apiUrl/projects/speckleworks/specklecoregeometry/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $jobId = $project.build.jobs[0].jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleCoreGeometry"
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa
  - ls C:\projects\speckleinstaller\SpeckleCoreGeometry
  # DOWNLOAD speckleelements ARTIFACTS
  - ps: |
      $prjUrl = "$apiUrl/projects/speckleworks/speckleelements/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $jobId = $project.build.jobs[0].jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleElements"
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa
  - ls C:\projects\speckleinstaller\SpeckleElements
  # DOWNLOAD specklestructural ARTIFACTS
  - ps: |
      $prjUrl = "$apiUrl/projects/speckleworks/specklestructural/branch/master"
      $headers = @{
        "Authorization" = "Bearer $token"
      }
      $project = Invoke-RestMethod -Method Get -Uri "$prjUrl" -Headers $headers
      $jobId = $project.build.jobs[0].jobId
      $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts" -Headers $headers
      $artifact = $artifacts | Where name -eq "Release"
      $artifactFileName = $artifact.fileName
      $localArtifactPath = "$Env:APPVEYOR_BUILD_FOLDER\$artifactFileName"
      Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobId/artifacts/$artifactFileName" -OutFile $localArtifactPath -Headers $headers
      $dest = "$Env:APPVEYOR_BUILD_FOLDER\SpeckleStructural"
      New-Item -ItemType directory -Path $dest
      7z x -o"$dest" "$localArtifactPath" -r -aoa
  - ls C:\projects\speckleinstaller\SpeckleStructural
  # EXECUTE INNO
  - InnoSetup\ISCC.exe SpeckleInstaller.iss

artifacts:
  path: Speckle.exe
  name: Release

deploy:
  release: Speckle-v$(appveyor_build_version)
  tag: $(APPVEYOR_REPO_TAG_NAME)
  description: 'The best Speckle so far...'
  provider: GitHub
  auth_token:
    secure: D5tPFvdQMg9sIe0sSvQjEWw4KAdOk1jyxNwiH5qP5DpDmUH6n6NgTdA+56vXS1Pe # your encrypted token from GitHub
  artifact: Speckle.exe
  draft: false
  prerelease: true
  force_update: true
  on:              # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only

notifications:
- provider: Slack
  incoming_webhook:
    secure: 9Kt/ImvGdsQ/dzmRdSaMIG+BO0R29MOJC7eZZnK5m5TyWwE+4nofEcYlb/r4lh9Z1Dx/bR+7oQtgAYO3W5s+qJshkT6Is9irYw3TfMZX7/M=
  channel: '#devtalk'
  template: Build <{{buildUrl}}|#{{buildVersion}}> (<{{commitUrl}}|{{commitId}}>) of {{repositoryName}}@{{branch}}) by {{commitAuthor}} {{status}} in {{duration}}
  on_build_success: false
  on_build_failure: true
  on_build_status_changed: true
